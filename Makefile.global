
PROJMAKE           := $(wildcard projects/$(PROJECT)/Makefile.prj)
CASEMAKE           := $(wildcard projects/$(PROJECT)/$(CASE)Makefile.prj)

ifneq ($(strip $(CASEMAKE)),)
include projects/$(PROJECT)/$(CASE)Makefile.prj
else
ifneq ($(strip $(PROJMAKE)),)
include projects/$(PROJECT)/Makefile.prj
endif
endif

PROJECT_FLAG      = -DPROJECT_NAME=\'$(PROJECT)\'
CASE_FLAG         = -DCASE_NAME=\'$(CASE)\'
ARG_FLAGS         = -DARG_INT1=$(INPUT_INT1) -DARG_INT2=$(INPUT_INT2)
OBJDIR           := build

ifeq ($(strip $(FF)),)
	FF = $(F90COMPILER)
endif

ifeq ($(NETCDFLIBS),"none")
	LIB_DIR =
	INC_DIR =
	ORM_FLAGS += -Dno_netcdf
else ifeq ($(NETCDFLIBS),"automatic")
	LIB_DIR = $(shell nc-config --flibs)
	INC_DIR = -I$(shell nc-config --includedir)
else ifeq ($(NETCDFLIBS),"automatic-44")
	INC_DIR = $(shell nf-config --cflags)
	LIB_DIR = $(shell nf-config --flibs)
else 
	LIB_DIR = -L/usr/local/lib
	INC_DIR = -I/usr/local/include/
	LNK_FLAGS = -lnetcdf -lnetcdff 
endif

ifeq ($(ARCH),"macports")
        F90COMPILER      = gfortran-mp-8 
	PROD_FF_FLAGS    = -O3 -c -x f95-cpp-input -g -fbacktrace -fbounds-check 
	DEV_FF_FLAGS     = -O1 -c -x f95-cpp-input -g -fbacktrace -fbounds-check -ffpe-trap=denormal -static -Wall -pedantic
        F90_FLAGS        = -fno-underscoring 
	FF              += $(LIB_DIR) $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS) -J$(OBJDIR) 
endif

ifeq ($(ARCH),"tetralith")
        F90COMPILER      = ifort
        PROD_FF_FLAGS    = -O3 -cpp -convert big_endian -xcore-avx512
        DEV_FF_FLAGS     = -O1 -cpp -convert big_endian -xcore-avx512 -g -traceback -fpe0 
        F90_FLAGS        = -free 
        ARG_FLAGS       += -Tf
        FF              += $(LIB_DIR) $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS)
	TT_FLAGS         = -c 
endif

ifeq ($(OPT),"opt")
        FF_FLAGS         = $(PROD_FF_FLAGS)
else
        FF_FLAGS         = $(DEV_FF_FLAGS) 
endif


CC                = gcc -O  $(INC_DIR)

ACTVEL = empty.o #zanna_turb_4.o

VPATH = src:projects/$(PROJECT):src/active_particles

all: runfile

objects := $(addprefix $(OBJDIR)/,modules.o interp_general.o interp2.o $(ACTVEL) calendar.o \
	   	    laplacian.o savepsi.o savepsi_new.o loop_pos.o writetrajs.o \
                    sw_stat.o tracer_functions.o \
	            seed.o init_seed.o getfile.o \
                    vertvel.o coord.o cross.o init_par.o time_subs.o \
                    pos.o sw_seck.o sw_pres.o sw_dens0.o \
                    writepsi.o writetracer.o printinfo.o loop.o main.o \
		    setupgrid.o readfield.o diffusion.o)

runfile : $(objects)
	$(FF) $(MYI_FLAGS) -o $(RUNFILE) $(objects) $(LNK_FLAGS) $(MYL_FLAGS)

$(OBJDIR)/%.o : %.F90 
	$(FF) $(TT_FLAGS) $(FF_FLAGS) $(ORM_FLAGS) $(PROJECT_FLAG) $(CASE_FLAG) $(ARG_FLAGS)  $< -o $@



$(objects) : | $(OBJDIR)

$(OBJDIR):
	mkdir -p $(OBJDIR)


.PHONY : clean
clean :
	-rm -rf build
	-rm $(RUNFILE)

