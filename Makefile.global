
PROJMAKE           := $(wildcard projects/$(PROJECT)/Makefile.prj)
CASEMAKE           := $(wildcard projects/$(PROJECT)/$(CASE)Makefile.prj)

ifneq ($(strip $(CASEMAKE)),)
include projects/$(PROJECT)/$(CASE)Makefile.prj
else
ifneq ($(strip $(PROJMAKE)),)
include projects/$(PROJECT)/Makefile.prj
endif
endif

PROJECT_FLAG      = -DPROJECT_NAME=\'$(PROJECT)\'
CASE_FLAG         = -DCASE_NAME=\'$(CASE)\'
ARG_FLAGS         = -DARG_INT1=$(INPUT_INT1) -DARG_INT2=$(INPUT_INT2)
OBJDIR           := build

ifeq ($(strip $(FF)),)
	FF = $(F95COMPILER)
endif

ifeq ($(NETCDFLIBS),"none")
	LIB_DIR =
	INC_DIR =
	ORM_FLAGS += -Dno_netcdf
endif
ifeq ($(NETCDFLIBS),"automatic")
	LIB_DIR = $(shell nc-config --flibs)
	INC_DIR = -I$(shell nc-config --includedir)
endif
ifeq ($(NETCDFLIBS),"automatic-44")
	INC_DIR = $(shell nf-config --cflags)
	LIB_DIR = $(shell nf-config --flibs)
endif 
ifeq ($(NETCDFLIBS),"macports")
	LIB_DIR          = -L/opt/local/lib
	INC_DIR          = -I/opt/local/include/
	LNK_FLAGS        = -lnetcdf -lnetcdff 
endif
ifeq ($(NETCDFLIBS),"fink")
        LIB_DIR          = -L/sw/lib # -L/sw/lib/netcdf-gfortran/lib
        INC_DIR          = -I/sw/include  #-I/sw/lib/netcdf-gfortran/include
        LNK_FLAGS        = -lnetcdf -lnetcdff -lsz -Wl,-dead_strip_dylibs
endif

ifeq ($(F95COMPILER),"gfortran")
#	FF_FLAGS         = -O3 -c -x f95-cpp-input -g -fbacktrace -fbounds-check
	FF_FLAGS         = -O3 -c -x f95-cpp-input 
        F90_FLAGS        = -fno-underscoring 
	FF              += $(LIB_DIR) $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS) -pg -J$(OBJDIR)
endif
ifeq ($(F95COMPILER),"g95")
	FF_FLAGS         = -c -cpp -fendian=big
	F90_FLAGS        = -O3 -C  -g  -fno-underscoring
	FF              += $(LIB_DIR) $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS)
endif

ifeq ($(F95COMPILER),"ifort")
        FF_FLAGS         = -O3 -c -cpp -convert big_endian
        F90_FLAGS        = -free -assume nounderscore
	ARG_FLAGS       += -Tf
        FF              += $(LIB_DIR) $(INC_DIR) $(F90_FLAGS) $(ORM_FLAGS)
endif






CC                = gcc -O  $(INC_DIR)

ACTVEL = zanna_turb_4.o

VPATH = src:projects/$(PROJECT):src/active_particles

all: runfile

objects := $(addprefix $(OBJDIR)/,modules.o $(ACTVEL) laplacian.o savepsi.o loop_pos.o writetrajs.o \
	            seed.o init_seed.o sw_stat.o getfile.o \
                    vertvel.o coord.o cross.o init_par.o time_subs.o \
                    interp.o interp2.o pos.o \
                    sw_seck.o sw_pres.o sw_dens0.o \
                    writepsi.o writetracer.o printinfo.o loop.o main.o \
		    setupgrid.o readfield.o diffusion.o)

runfile : $(objects)
	$(FF) $(MYI_FLAGS) -o $(RUNFILE) $(objects) $(LNK_FLAGS) $(MYL_FLAGS)

$(OBJDIR)/%.o : %.f95
	$(FF) $(FF_FLAGS) $(ORM_FLAGS) $(PROJECT_FLAG) $(CASE_FLAG) $(ARG_FLAGS)  $< -o $@



$(objects) : | $(OBJDIR)

$(OBJDIR):
	mkdir -p $(OBJDIR)


.PHONY : clean
clean :
	-rm -rf build
	-rm $(RUNFILE)

